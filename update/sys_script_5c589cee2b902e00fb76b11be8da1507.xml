<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_blglp_research_requests</collection>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition table="x_blglp_research_requests">u_bxres_state&lt;=8^u_bxres_state!=7^EQ<item endquery="false" field="u_bxres_state" goto="false" newquery="false" operator="&lt;=" or="false" value="8"/>
            <item endquery="false" field="u_bxres_state" goto="false" newquery="false" operator="!=" or="false" value="7"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Recalculate Total Billing</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onBefore(current, previous) {
   /* Get the current rate and calculate the total bill. NOTE: This business rule must be fired last so that all previous duration calcs are complete. */
	var rate = 0;
	var grConfig = new GlideRecord('x_blglp_research_config');
	grConfig.addQuery('u_bxres_config_menu_type', 1);
	grConfig.query();
	if (grConfig.next()) {
		rate = grConfig.u_bxres_config_value;
	}
	
	var tsRecords = new GlideRecord('x_blglp_research_time_segment');
	tsRecords.addQuery('u_bxtim_parent_request_id', current.getUniqueValue());
	tsRecords.query();
	
	var total_duration = 0;
	var total_billing = 0;
	while (tsRecords.next()) {
		total_duration += tsRecords.minutes_int;
	}
	
	total_billing = rate * (total_duration/60);
	current.time_total = total_duration;
	current.time_billing = total_billing;
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>ahernr</sys_created_by>
        <sys_created_on>2016-07-01 17:04:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>5c589cee2b902e00fb76b11be8da1507</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Recalculate Total Billing</sys_name>
        <sys_overrides/>
        <sys_package display_value="Research" source="x_blglp_research">a61934f5610dde80fb764481e7ed376d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Research">a61934f5610dde80fb764481e7ed376d</sys_scope>
        <sys_update_name>sys_script_5c589cee2b902e00fb76b11be8da1507</sys_update_name>
        <sys_updated_by>ahernr</sys_updated_by>
        <sys_updated_on>2016-07-11 01:20:12</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
